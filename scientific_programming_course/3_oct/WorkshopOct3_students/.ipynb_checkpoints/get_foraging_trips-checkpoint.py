# Import modules
from time_diff import time_diff
import sys

# Put the content of the log file in a dictionary
# with the individual bees as keys and a list with observations as a value
# The observations are conveniently in chronological order.
def rfid_dict(log_file):
    """
    This function takes an open log file with RFID data as generated by
    the Microsensys iIDÂ®science Reader AEB-03.C2D and adds the data
    to a dictionary

    Args:
        log_file (string): The path to a log file

    Returns:
       A dictionary with animal ID as key and the time,
       direction and reader ID as values

    Examples:
        >>> rfid_dict("log_x.csv")
        {'25SQCMICSBB1CB500F376': [('15:44:59.630', 'Departing', '200558'), ('15:45:14.724', 'Arriving', '200558')], '25SQCMICSBB7C2300F3A7': [('16:07:36.490', 'Departing', '200558'), ('16:09:21.959', 'Arriving', '200558')]}
    """
    rfid_dict = {}
    for line in log_file:
        # Test if the line starts with the year 2020+
        if line.startswith("202"):       
            info = line.strip("\n").split(",")
            # Retrieve time from timestamp in first column
            time = info[0].split(" ")[1]
            reader = info[2]
            bee_id = info[3]
            direction = info[9]
            # Put the relevant information in a tuple
            record = (time, direction, reader)
            if rfid_dict.get(bee_id) is None:
                rfid_dict.update({bee_id: [record]})
            else:
                rfid_dict.get(bee_id).append(record)
    return rfid_dict

# A function which loops through the dictionary
# and writes each foraging trip to a file
def find_foraging_trips(bee_dict):
    """
    This function takes the dictionary generated by the function rfid_dict()
    and extracts the foraging trips and writes them to file.

    Args:
        bee_dict (dictionary): Dictionary for foraging trip extraction

    Returns:
       A comma-separated file named "foraging_trips.csv" containing the foraging trips. 
    """
    out_file = open("foraging_trips.csv", "w")
    out_file.write("Bee_id,Reader,Start,End,Duration\n")
    for ind in bee_dict:
        rec_list = bee_dict.get(ind)
        for r in rec_list[0:len(rec_list)-1]:
            if r[1] == "Departing" and rec_list[rec_list.index(r) + 1][1] == "Arriving":
                #Test if observations were recorded by the same reader:
                if r[2] == rec_list[rec_list.index(r) + 1][2]:
                    duration = time_diff(r[0], rec_list[rec_list.index(r) + 1][0])
                    if 180 <= duration <= 10800:
                        out_file.write(ind + "," + r[2] + "," + r[0] + "," +
                                      rec_list[rec_list.index(r) + 1][0] + "," + str(duration) + "\n")

if __name__ == "__main__":
    log_file = open(sys.argv[1])
    bee_dict = rfid_dict(log_file)
    find_foraging_trips(bee_dict)